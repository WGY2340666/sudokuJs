{"version":3,"sources":["webpack:///webpack/bootstrap ee2cc47df4147bdf2910","webpack:///./js/index.js","webpack:///./js/ui/grid.js","webpack:///./js/core/toolkit.js","webpack:///./js/core/sudoku.js","webpack:///./js/core/generator.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;;;;AAIA;AACA;AACA;;;;;;;;;ACNA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAO;;AAEP;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAO;;AAEP;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,2BAA0B,MAAM;AAChC,sCAAqC,SAAS;AAC9C,QAAO;AACP;AACA;;AAEA;;;;;;;AC1DA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA,0BAAyB,YAAY;AACrC,IAAG;;AAEH;AACA;AACA;AACA,cAAa,IAAI;AACjB;;AAEA;AACA;AACA,oBAAmB,eAAe;AAClC;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,WAAW;;AAEtB;AACA;AACA;AACA;AACA;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B,eAAe;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC9GA;AACA;AACA;;;AAGA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAM;;AAEN;AACA;;;;;;;AC1BA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA,oBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap ee2cc47df4147bdf2910","const Grid = require(\"./ui/grid\");\n\n\n\nconst grid = new Grid($(\"#container\"));\ngrid.build();\ngrid.layout();\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/index.js\n// module id = 0\n// module chunks = 0","/**\n * 生成九宫格\n */\n\nconst Toolkit = require(\"../core/toolkit\");\nconst Sudoku = require(\"../core/sudoku\");\n\nclass Grid {\n  constructor(container) {\n    this._$container = container;\n  }\n\n  build() {\n\n    const sudoku = new Sudoku();\n    sudoku.make();\n    const matrix = sudoku.puzzleMatrix;\n\n    // const generator = new Generator();\n    // generator.generate();\n    // const matrix = generator.matrix;\n\n    const rowGroupClasses = [\"row_g_top\", \"row_g_middle\", \"row_g_bottom\"];\n    const colGroupClasses = [\"col_g_left\", \"col_g_center\", \"col_g_right\"];\n\n    const $cells = matrix.map(rowValues => rowValues\n      .map((cellValue, colIndex) => {\n\n        return $(\"<span>\")\n          .addClass(colGroupClasses[colIndex % 3])\n          .addClass(cellValue ? \"fixed\" : \"empty\")\n          .text(cellValue);\n      }));\n\n    const $divArray = $cells\n      .map(($spanArray, rowIndex) => {\n\n        return $(\"<div>\")\n          .addClass(\"row\")\n          .addClass(rowGroupClasses[rowIndex % 3])\n          .append($spanArray);\n      });\n\n    this._$container.append($divArray);\n  }\n\n\n  layout() {\n    const width = $(\"span:first\", this._$container).width();\n    $(\"span\", this._$container)\n      .height(width)\n      .css({\n        \"line-height\": `${width}px`,\n        \"font-size\": width < 32 ? `${width /2}px` : \"\"\n      })\n  }\n}\n\nmodule.exports = Grid;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/ui/grid.js\n// module id = 1\n// module chunks = 0","/**\n * 矩阵和数组相关工具\n */\n\nconst matrixToolkit = {\n\n  makeRow(v = 0) {\n      const array = new Array(9);\n      array.fill(v);\n      return array;\n  },\n\n  makeMatrix(v = 0) {\n      return Array.from({ length: 9 }, () => this.makeRow(v));\n  },\n\n  /**\n   * Fisher-Yates 洗牌算法\n   * 对传入数组进行随机排序，然后把这个数组返回出来\n   * @param {any} array\n   */\n\n  shuffle(array) {\n    const endIndex = array.length - 2;\n    for (let i = 0; i <= endIndex; i++) {\n      const j = i + Math.floor(Math.random() * (array.length - i));\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n    return array;\n  },\n\n  /**\n   * 检查指定位置可以填写数字 n\n   */\n  checkFillable(matrix, n, rowIndex, colIndex) {\n    const row = matrix[rowIndex];\n    const column = this.makeRow().map((v, i) => matrix[i][colIndex]);\n    const { boxIndex } = boxTookit.convertToBoxIndex(rowIndex, colIndex);\n\n    // console.log('3' + matrix);\n    // console.log('4' + boxIndex);\n    // console.log('5' + rowIndex);\n    // console.log('6' + colIndex);\n    const box = boxTookit.getBoxCells(matrix, boxIndex);\n    for (let i = 0; i < 9; i++) {\n      if (row[i] === n\n          || column[i] === n\n          || box[i] === n){\n            return false;\n          }\n    }\n    return true;\n  }\n};\n\n/**\n * 宫坐标系工具\n */\nconst boxTookit = {\n\n  getBoxCells(matrix, boxIndex) {\n    // console.log('test2'+matrix);\n    // console.log('test3'+boxIndex);\n    const startRowIndex = Math.floor(boxIndex / 3) * 3;\n    // console.log(startRowIndex);\n    const startColIndex = boxIndex % 3 * 3;\n    const result = [];\n    for (let cellIndex = 0; cellIndex < 9; cellIndex++) {\n      const rowIndex = startRowIndex + Math.floor( cellIndex / 3);\n      // console.log(rowIndex);\n      const colIndex = startColIndex + cellIndex % 3;\n      // console.log(colIndex);\n      result.push(matrix[rowIndex][colIndex]);\n    }\n    return result;\n  },\n\n  convertToBoxIndex(rowIndex, colIndex) {\n    return {\n      boxIndex: Math.floor(rowIndex / 3) * 3 + Math.floor(colIndex / 3),\n      cellIndex: rowIndex % 3 * 3 + colIndex % 3\n    }\n  },\n\n  convertFromBoxIndex(boxIndex, cellIndex) {\n    return {\n      rowIndex: Math.floor(boxIndex / 3) * 3 + Math.floor(cellIndex / 3),\n      colIndex: boxIndex % 3 * 3 + cellIndex % 3\n    }\n\n  }\n};\n\n// 工具集\nmodule.exports = class Toolkit {\n\n  /**\n   * 矩阵和数组相关工具\n   */\n\n  static get matrix() {\n    return matrixToolkit;\n  }\n\n  /**\n   * 宫坐标系工具\n   */\n  static get box() {\n    return boxTookit;\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/core/toolkit.js\n// module id = 2\n// module chunks = 0","/**\n * 生成数独游戏\n */\n\n\n //1. 生成完成的解决方案： Generator\n //2. 随机去除部分数据： 按比例\n\n const Generator = require(\"./generator\");\n\n module.exports = class Sudoku {\n   constructor () {\n     // 生成完成的解决方案\n     const generator = new Generator();\n     generator.generate();\n     this.solutionMatrix = generator.matrix;\n   }\n\n   make(level = 5) {\n    //  const shouldRid = Math.random() * 9 < level;\n     // 生成迷盘\n     this.puzzleMatrix = this.solutionMatrix.map(row => {\n      return row.map(cell => Math.random() * 9 < level ? 0 : cell);\n     });\n\n   }\n };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/core/sudoku.js\n// module id = 3\n// module chunks = 0","// 生成数独解决方案\nconst Toolkit = require(\"./toolkit\");\n\nmodule.exports = class Generator {\n\n  generate() {\n    while (!this.internalGenerate()) {\n      // TODO\n      console.warn(\"try again\");\n    }\n  }\n\n  internalGenerate() {\n    this.matrix = Toolkit.matrix.makeMatrix();\n    this.orders = Toolkit.matrix.makeMatrix()\n        .map(row => row.map((v, i) => i))\n        .map(row => Toolkit.matrix.shuffle(row));\n\n\n    for (let n = 1; n <= 9; n++) {\n      if (!this.fillNumber(n)) {\n        return false;\n      }\n      this.fillNumber(n);\n    }\n    return true;\n  }\n\n  fillNumber(n) {\n    return this.fillRow(n, 0);\n  }\n\n  fillRow(n, rowIndex) {\n    if (rowIndex > 8) {\n      return true;\n    }\n\n    const row = this.matrix[rowIndex];\n    const orders = this.orders[rowIndex];\n    // TODO 随机选择列\n    for (let i = 0; i < 9; i++) {\n      const colIndex = orders[i];\n      // 如果这个位置已经有值，跳过\n      if (row[colIndex]) {\n        continue;\n      }\n\n      // console.log(\"1\"+ rowIndex);\n      // console.log(\"2\"+ colIndex);\n\n      // 检查这个位置是否可以填n\n      if (!Toolkit.matrix.checkFillable(this.matrix, n, rowIndex, colIndex)) {\n        continue;\n      }\n\n      row[colIndex] = n;\n\n      // 去下一行填写n，如果没填进去，就继续寻找当前行下一个位置\n      if (!this.fillRow(n, rowIndex + 1)) {\n        row[colIndex] = 0;\n        continue;\n      }\n\n      return true;\n    }\n\n    return false;\n  }\n}\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/core/generator.js\n// module id = 4\n// module chunks = 0"],"sourceRoot":""}